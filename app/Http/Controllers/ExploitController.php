<?php

namespace App\Http\Controllers;

use App\Models\Exploit;
use App\Models\User;
use App\Models\Feedback;
use App\Models\Quotation;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Facades\Artisan;
use RealRashid\SweetAlert\Facades\Alert;
use File;


class ExploitController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function clean()
    {
        Artisan::call('config:clear');
        Artisan::call('view:clear');
        Artisan::call('optimize:clear');
        Artisan::call('storage:link');
        return redirect()->back();
    }
    public function index()
    {
        if (session(key: 'success_message')) {
            Alert::success('Thank you', session(key: 'success_message'));
        }

        $header = DB::table('companies')
            ->select('*')
            ->get();
        $logo = DB::table('companies')
            ->select('*')
            ->get();
        $abt = DB::table('companies')
            ->select('*')
            ->get();
        $slider = DB::table('slides')
            ->select('*')
            ->get();
        $client = DB::table('clients')
            ->select('*')
            ->get();
        $fb = DB::table('feedback')
            ->select('*')
            ->get();
        return view('front.home', [
            'header' => $header,
            'slider' => $slider,
            'client' => $client,
            'abt' => $abt,
            'fb' => $fb,
            'logo' => $logo,
        ]);
    }
    public function info()
    {
        $header = DB::table('companies')
            ->select('*')
            ->get();
        $intro = DB::table('introimgs')
            ->select('*')
            ->get();
        $logo = DB::table('companies')
            ->select('*')
            ->get();
        $abts = DB::table('abouts')
            ->select('*')
            ->get();

        return view('front.about', [
            'header' => $header,
            'intro' => $intro,
            'abts' => $abts,
            'logo' => $logo,
        ]);
    }
    public function done()
    {
        $header = DB::table('introimgs')
            ->select('*')
            ->get();
        $logo = DB::table('companies')
            ->select('*')
            ->get();
        $project = DB::table('projects')
            ->select('*')
            ->get();
        $intro = DB::table('introimgs')
            ->select('*')
            ->get();

        return view('front.projects', [
            'header' => $header,
            'logo' => $logo,
            'project' => $project,
            'intro' => $intro,
        ]);
    }
    // public function users()
    // {
    //     $header = DB::table('companies')
    //         ->select('*')
    //         ->get();
    //     $logo = DB::table('companies')
    //         ->select('*')
    //         ->get();
    //     $intro = DB::table('introimgs')
    //         ->select('*')
    //         ->get();
    //     $staff = DB::table('staff')
    //         ->select('*')
    //         ->get();
    //     return view('front.team',[
    //     'header' => $header,
    //     'logo' => $logo,
    //     'intro' => $intro,
    //     'staff' => $staff,
    //     ]);
    // }
    public function quotation()
    {
        if (session(key: 'success_message')) {
            Alert::success('Checking it!', session(key: 'success_message'));
        }
        $header = DB::table('companies')
            ->select('*')
            ->get();
        $logo = DB::table('companies')
            ->select('*')
            ->get();
        $intro = DB::table('introimgs')
            ->select('*')
            ->get();
        return view('front.quotation', [
            'header' => $header,
            'logo' => $logo,
            'intro' => $intro,
        ]);
    }

    /* admin */

    public function login()
    {
        // if auth is true
        if (Auth::check()) {
            return redirect()->route('admin.dashboard');
        }
        return view('cms.login', [
            //'header' => $header,
        ]);
    }

    // public function saveuser(Request $request)
    // {
    //     $user = new User();
    //     $user->name=$request->input('name');
    //     $user->email=$request->input('email');
    //     $user->password=Hash::make($request->input('password'));
    //     $user->save();
    //     return redirect("/users")->with('success', 'Your quotation has been send Successfully!');
    // }
    public function showuser()
    {
        $user = DB::table('users')
            ->select('*')
            ->get();
        //dd($header);
        return view('cms.users', [
            'user' => $user,
        ]);
    }

    public function newuser(Request $request)
    {
        // get auth name
        $auth = Auth::user()->name;
        // dd($auth);
        $user = new User();
        $user->name = $request->input('name');
        $user->email = $request->input('email');
        $user->role = $request->input('role');
        // $user->authoredby->$auth;
        $user->password = Hash::make($request->input('password'));
        $user->save();
        return redirect("/users")->with('success', 'User added Successfully!');
    }

    // edit user function
    public function edituser(Request $request)
    {
        $user = User::find($request->id);
        // if request->password != null
        if ($request->password != null) {
            DB::table('users')
                ->where('id', $request->id)
                ->update([
                    'name' => $request->input('name'),
                    'email' => $request->input('email'),
                    'role' => $request->input('role'),
                    'password' => Hash::make($request->input('password')),
                ]);
        } else {
            DB::table('users')
                ->where('id', $request->id)
                ->update([
                    'name' => $request->input('name'),
                    'email' => $request->input('email'),
                    'role' => $request->input('role'),
                ]);
        }

        return redirect()->back()->with('success', 'User updated Successfully!');
    }
    /* admin */
    /* admin */
    public function dash()
    {
        /* $header = DB::table('companies')
            ->select('*')
            ->get();
        //dd($header); */
        return view('cms.dashboard', [
            //'header' => $header,
        ]);
    }

    public function intoimg()
    {
        $header = DB::table('companies')
            ->select('*')
            ->get();
        $introductionimg = DB::table('introimgs')
            ->select('*')
            ->get();
        //dd($header);
        return view('cms.introimages', [
            'header' => $header,
            'introductionimg' => $introductionimg,
        ]);
    }


    public function quoAdmin()
    {
        $qt = DB::table('quotations')
            ->select('*')
            ->get();
        //dd($qt);
        return view('cms.quotations', [
            'quotation' => $qt,
        ]);
    }


    /* adding uses quotation to db */
    public function addQuote(Request $request)
    {
        $qt = new Quotation();
        $qt->name = $request->input('name');
        $qt->service = $request->input('service');
        $qt->message = $request->input('quote');
        $qt->phone = $request->input('phone');
        $qt->email = $request->input('email');
        $qt->location = $request->input('location');
        $qt->viewed = ('NO');
        $qt->save();
        return redirect()->back()->withSuccessMessage('Your Quotation has been received successfully!');
    }
    /* adding uses feedbcak to db */
    // public function addFeedback(Request $request)
    // {
    //     $fb = new Feedback();
    //     if (($request->file('image') != NULL)) {
    //         //dd('hapo 2');
    //         if (($request->file('image')->getSize()) < 10097152) {
    //         } else {
    //             return redirect()->back()->with('error', 'Too Large Project image; maxSize=10014kbs !');
    //         }
    //     }

    //     if ($request->hasFile('image')) {
    //         $extension = $request->image->getClientOriginalName();
    //         $request->image->storeAs('/public/feeback/', date("dmYhis") . $extension);
    //         $fb->image = Storage::url('feeback/' . date("dmYhis") . $extension);
    //     }

    //     $fb->name = $request->input('name');
    //     $fb->institution = $request->input('from');
    //     $fb->text = $request->input('message');
    //     $fb->verified = ('NO');
    //     $fb->save();
    //     return redirect()->back()->withSuccessMessage('Feedback Send Successfully!');
    // }


    public function profilepage()
    {
        $auth = Auth::user()->email;
        $user = DB::table('users')
            ->select('*')
            ->where('email', $auth)
            ->get();
        //dd($user);
        return view('cms.profile', [
            'user' => $user,
        ]);
    }
    // edit user function
    public function updateProfile(Request $request)
    {
        $user = User::find($request->id);
        // if request->password != null
        if ($request->password != null) {
            DB::table('users')
            ->where('id', $request->id)
                ->update([
                    'name' => $request->input('name'),
                    'email' => $request->input('email'),
                    'password' => Hash::make($request->input('password')),
                ]);
        } else {
            DB::table('users')
            ->where('id', $request->id)
                ->update([
                    'name' => $request->input('name'),
                    'email' => $request->input('email'),
                ]);
        }

        return redirect()->back()->with('success', 'Profile updated Successfully!');
    }


    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\Exploit  $exploit
     * @return \Illuminate\Http\Response
     */
    public function show(Exploit $exploit)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\Exploit  $exploit
     * @return \Illuminate\Http\Response
     */
    public function edit(Exploit $exploit)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Exploit  $exploit
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Exploit $exploit)
    {
        //
    }
    public function logout(Request $request)
    {
        Auth::logout();
        $request->session()->invalidate();
        $request->session()->regenerateToken();
        return redirect('/');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\Exploit  $exploit
     * @return \Illuminate\Http\Response
     */
    public function destroyUser(Exploit $exploit, $id)
    {
        $user = User::find($id);
        $user->delete();
        return redirect()->back()->with('success', 'User deleted Successfully!');
    }
}
